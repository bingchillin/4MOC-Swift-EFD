# .circleci/config.yml
version: 2.1

orbs:
  macos: circleci/macos@2.4.1

jobs:
  setup-project:
    macos:
      xcode: 14.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: cd api/ && npm install
      - run:
          name: Install NestJs
          command: cd api/ && npm i -g @nestjs/cli
      - run:
          name: Install MongoDB
          command: |
            cd api/
            brew tap mongodb/brew
            brew update
            brew install mongodb-community@7.0
      - run:
          name: Start MongoDB service
          command: cd api/ && brew services start mongodb-community
      - run:
          name: Restore MongoDB backup
          command: cd api/ && mongorestore
      - run:
          name: Start API
          command: |
            cd api/
            nest start --watch &
            until $(curl --output /dev/null --silent --head --fail http://localhost:3000); do
                printf '.'
                sleep 1
            done

  ping-api:
    macos:
      xcode: 14.2.0
    steps:
      - checkout
      - run:
          name: Ping API
          command:
            curl http://localhost:3000

  build-and-test:
    macos:
      xcode: 14.2.0
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: ios_test
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Fastlane
          command: cd IOS/EFD && bundle exec fastlane ios_test 
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

  adhoc:
    macos:
      xcode: 14.2.0
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: adhoc
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output

  build-and-upload-ios:
    macos:
      xcode: 14.2.0
    environment: 
      release_notes: "Release of the sample app"
      git_release_notes: true
      git_commit_id: false
      notify: true
    steps:
      - checkout
      - run:
          name: Assemble debug build
          command: |
            cd IOS/EFD
            xcodebuild -project EFD.xcodeproj -scheme EFD -sdk iphoneos -configuration Debug -destination generic/platform=iOS build archive -archivePath build/EFD.xcarchive
            
      # For a release build:
      # - run:
      #     name: Assemble release build
      #     command: |
      #       xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -sdk iphoneos -configuration Release build

      # Upload to TestApp.io
      - run:
          name: Upload to TestApp.io
          command: |
            export INSTALL_DIR=/tmp
            curl -Ls https://github.com/testappio/cli/releases/latest/download/install | bash
            $INSTALL_DIR/ta-cli publish --api_token=$TESTAPPIO_API_TOKEN --app_id=$TESTAPPIO_APP_ID --release="ios" --ipa=./IOS/EFD/build/EFD.ipa --notify=true --git_release_notes=true --git_commit_id=true --source="Circle CI"

workflows:
  build-test:
    jobs:
      #- setup-project
#      - ping-api:
 #         requires: 
  #          - setup-project
#      - build-and-test:
 #         requires:
  #          - setup-project
      - build-and-upload-ios
          #requires:
           # - setup-project
      - adhoc:
          filters:
            branches:
              only: development